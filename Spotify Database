# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#1. First, You are throwing a party. Make a play list of your top 10 danceable & popular songs, including artist and name?

SELECT artist_name as Artist, track_name as Track
FROM BIT_DB.Spotifydata
ORDER BY artist_name, track_name, popularity ASC, danceability ASC
LIMIT 10;

#2. Next, What are top 5 songs, and the artist who sings them?

SELECT track_name as Track, artist_name as Artist
FROM BIT_DB.Spotifydata
ORDER BY track_name, artist_name, popularity ASC
LIMIT 5;

#3. Next, What was the average song time in 2021, and which song released was the longest? Include artist.

SELECT track_name as Track, artist_name as Artist, AVG(duration_ms) as Average_2021
FROM BIT_DB.spotifydata
HAVING track_name = MAX(duration_ms)
ORDER BY duration_ms;

#4. Then, I determined the avg popularity, danceability, and energy by artist and track.

SELECT artist_name as Artist,track_name AS Track, avg(popularity), avg(danceability), avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

#5. Finally, Having a stressed day, I determined the top fifteen songs and the artist that were the quietest, and least energtic.

SELECT artist_name AS Artist, track_name as Track
FROM BIT_DB.Spotifydata
ORDER BY loudness DESC, energy DESC
LIMIT 15;
